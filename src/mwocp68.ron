(
    all: [],
    numerics: [
        ("FAN_COMMAND_1", Linear11, Unitless),
        ("FAN_COMMAND_2", Linear11, Unitless),
        ("IOUT_OC_FAULT_LIMIT", Linear11, Amperes),
        ("IOUT_OC_WARN_LIMIT", Linear11, Amperes),
        ("OT_WARN_LIMIT", Linear11, Celsius),
        ("IIN_OC_WARN_LIMIT", Linear11, Amperes),
        ("POUT_OP_WARN_LIMIT", Linear11, Watts),
        ("PIN_OP_WARN_LIMIT", Linear11, Watts),
        ("READ_VIN", Linear11, Volts),
        ("READ_IIN", Linear11, Amperes),
        ("READ_VCAP", VOutMode(Unsigned), Volts),
        ("READ_VOUT", VOutMode(Unsigned), Volts),
        ("READ_IOUT", Linear11, Amperes),
        ("READ_TEMPERATURE_1", Linear11, Celsius),
        ("READ_TEMPERATURE_2", Linear11, Celsius),
        ("READ_TEMPERATURE_3", Linear11, Celsius),
        ("READ_FAN_SPEED_1", Linear11, Rpm),
        ("READ_FAN_SPEED_2", Linear11, Rpm),
        ("READ_POUT", Linear11, Watts),
        ("READ_PIN", Linear11, Watts),
        ("MFR_VIN_MIN", Linear11, Volts),
        ("MFR_VIN_MAX", Linear11, Volts),
        ("MFR_IIN_MAX", Linear11, Amperes),
        ("MFR_PIN_MAX", Linear11, Watts),
        ("MFR_VOUT_MIN", VOutMode(Unsigned), Volts),
        ("MFR_VOUT_MAX", VOutMode(Unsigned), Volts),
        ("MFR_IOUT_MAX", Linear11, Amperes),
        ("MFR_POUT_MAX", Linear11, Watts),
        ("MFR_TAMBIENT_MAX", Linear11, Celsius),
        ("MFR_TAMBIENT_MIN", Linear11, Celsius),
        ("MFR_MAX_TEMP_1", Linear11, Celsius),
        ("MFR_MAX_TEMP_2", Linear11, Celsius),
        ("MFR_MAX_TEMP_3", Linear11, Celsius),
    ],
    structured: {
        "STATUS_MFR_SPECIFIC": {
            // Bit 7: reserved
            "PrimaryOvertemperatureFault": (
                name: "LLC primary temp sensor overtemperature fault",
                bits: Bit(6),
                values: Sentinels({
                    "NoFault": (0b0, "no fault"),
                    "Fault": (0b1, "fault"),
                }),
            ),
            "OringOvertemperatureFault": (
                name: "Oring temp sensor overtemperature fault",
                bits: Bit(5),
                values: Sentinels({
                    "NoFault": (0b0, "no fault"),
                    "Fault": (0b1, "fault"),
                }),
            ),
            "CurrentSensorReadError": (
                name: "Current sensor reading error",
                bits: Bit(4),
                values: Sentinels({
                    "NoError": (0b0, "no error"),
                    "Error": (0b1, "error"),
                }),
            ),
            "TemperatureSensorReadError": (
                name: "Temperature sensor reading error",
                bits: Bit(3),
                values: Sentinels({
                    "NoError": (0b0, "no error"),
                    "Error": (0b1, "error"),
                }),
            ),
            "WrongProductId": (
                name: "Primary product ID incorrect",
                bits: Bit(2),
                values: Sentinels({
                    "IdCorrect": (0b0, "product ID correct"),
                    "IdIncorrect": (0b1, "product ID incorrect"),
                }),
            ),
            // Bit 1: reserved
            "OringFetFault": (
                name: "Oring FET fault",
                bits: Bit(0),
                values: Sentinels({
                    "NoFault": (0b0, "no fault"),
                    "Fault": (0b1, "fault"),
                }),
            ),
        },
    }
)
